name: "Setup"
description: "Setup all the dependencies for the project"
inputs:
  install-rust:
    description: "Install Rust toolchain"
    required: false
    default: "true"
  install-bun:
    description: "Install Bun runtime"
    required: false
    default: "true"
  install-node:
    description: "Install Node.js"
    required: false
    default: "true"
  bun-version:
    description: "Bun version to install"
    required: false
    default: "latest"
  install-node-modules:
    description: "Install Node.js modules"
    required: false
    default: "true"
  node-version:
    description: "Node version to install"
    required: false
    default: "latest"
  cache-key-prefix:
    description: "Additional text to prepend to cache keys"
    required: false
    default: "global"
  shell:
    description: "Shell to use"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Omni
      uses: omni-oss/setup-omni@main # use main temporarily to check if it works

    # Placeholder for future use
    - name: Get Workspace Hash
      id: get_workspace_hash
      run: echo "workspace_hash=$(omni hash -r workspace)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Omni directory
      uses: actions/cache@v4
      with:
        path: |
          ~/.omni
        key: ${{ runner.os }}-${{ inputs.cache-key-prefix }}-omni-${{ steps.get_workspace_hash.outputs.workspace_hash }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-omni-

    - name: Install Rust
      if: inputs.install-rust == 'true'
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Install Bun
      if: inputs.install-bun == 'true'
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ inputs.bun-version }}

    - name: Install Node
      if: inputs.install-node == 'true'
      uses: actions/setup-node@v4
      with:
        check-latest: true
        node-version: ${{ inputs.node-version }}

    - name: Cache cargo registry
      if: inputs.install-rust == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-${{ inputs.cache-key-prefix }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-cargo-

    - name: Cache target folder
      if: inputs.install-rust == 'true'
      uses: actions/cache@v4
      with:
        path: |
          target
        key: ${{ runner.os }}-${{ inputs.cache-key-prefix }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-target-

    - name: Cache Bun install
      if: inputs.install-bun == 'true' || inputs.install-node-modules == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun/install
        key: ${{ runner.os }}-${{ inputs.cache-key-prefix }}-bun-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-bun-

    - name: Install Node dependencies
      if: inputs.install-bun == 'true' && inputs.install-node-modules == 'true'
      run: bun install
      shell: ${{ inputs.shell }}
