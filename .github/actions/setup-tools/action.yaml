name: "Setup Tools"
description: "Setup Tools"
inputs:
  install-all:
    description: "Install all tools"
    required: false
    default: "false"
  install-rust:
    description: "Install Rust toolchain"
    required: false
    default: "false"
  install-rust-target:
    description: "Install Rust target director"
    required: false
    default: "false"
  install-bun:
    description: "Install Bun runtime"
    required: false
    default: "false"
  install-node:
    description: "Install Node.js"
    required: false
    default: "false"
  bun-version:
    description: "Bun version to install"
    required: false
    default: "latest"
  install-node-modules:
    description: "Install Node.js modules"
    required: false
    default: "false"
  node-version:
    description: "Node version to install"
    required: false
    default: "latest"
  cache-key-prefix:
    description: "Additional text to prepend to cache keys"
    required: false
    default: "global"
  rust-target-cache-key-prefix:
    description: "Additional text to prepend to cache keys"
    required: false
  node-modules-cache-key-prefix:
    description: "Additional text to prepend to cache keys"
    required: false
  shell:
    description: "Shell to use"
    required: false
    default: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
  github-token:
    description: "GitHub token for higher rate limit"
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - name: Install Rust
      if: ${{ inputs.install-all == 'true' || inputs.install-rust == 'true' }}
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Install Bun
      if: ${{ inputs.install-all == 'true' || inputs.install-bun == 'true' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ inputs.bun-version }}

    - name: Install Node
      if: ${{ inputs.install-all == 'true' || inputs.install-node == 'true' }}
      uses: actions/setup-node@v4
      with:
        check-latest: true
        node-version: ${{ inputs.node-version }}

    - name: Cache cargo registry
      if: ${{ inputs.install-all == 'true' || inputs.install-rust-target == 'true' }}
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ inputs.cache-key-prefix }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ inputs.cache-key-prefix }}-
          ${{ runner.os }}-cargo-

    - name: Cache target folder
      if: ${{ inputs.install-all == 'true' || inputs.install-rust-target == 'true' }}
      uses: actions/cache@v4
      with:
        path: |
          target
        key: ${{ runner.os }}-target-${{ inputs.rust-target-cache-key-prefix || inputs.cache-key-prefix }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-${{ inputs.rust-target-cache-key-prefix || inputs.cache-key-prefix }}-
          ${{ runner.os }}-target-

    - name: Cache Bun install
      if: ${{ inputs.install-all == 'true' || inputs.install-bun == 'true' || inputs.install-node-modules == 'true' }}
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun/install
        key: ${{ runner.os }}-bun-${{ inputs.node-modules-cache-key-prefix || inputs.cache-key-prefix }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-bun-${{ inputs.node-modules-cache-key-prefix || inputs.cache-key-prefix }}-
          ${{ runner.os }}-bun-

    - name: Install Node dependencies
      if: ${{ inputs.install-all == 'true' ||  inputs.install-bun == 'true' && inputs.install-node-modules == 'true' }}
      run: bun install
      shell: ${{ inputs.shell }}
