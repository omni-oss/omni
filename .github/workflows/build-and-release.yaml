name: Build and Release

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*" # Trigger release on version tags like v1.0.0
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache target folder
        uses: actions/cache@v4
        with:
          path: |
            target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Build
        run: cargo build --release --verbose

      - name: Compress binary on Linux/macOS
        if: runner.os != 'Windows'
        run: zip -j my-crate-linux.zip target/release/omni

      - name: Compress binary on Windows
        if: runner.os == 'Windows'
        run: 7z a my-crate-windows.zip target\release\omni.exe
        shell: pwsh

      - name: Upload compressed binary
        uses: actions/upload-artifact@v4
        with:
          name: omni-${{ matrix.os }}
          path: omni-${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: ./binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./binaries/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
