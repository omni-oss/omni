[workspace]
resolver = "3"
members = ["cli/*", "crates/*"]
# default-members = ["cli/omni"]

[workspace.package]
homepage = "https://github.com/omni-build/omni"
license = "MIT"
repository = "https://github.com/omni-build/omni"
keywords = ["build", "build-system", "build-tools", "cli", "omni", "devops"]
readme = "README.md"
documentation = "https://docs.rs/omni"
description = "A build system for the modern age"
categories = [
    "command-line-utilities",
    "development-tools",
    "development-tools::build-utils",
]
rust-version = "1.89.0"
edition = "2024"
version = "0.0.0-semantically-released"
authors = ["Clarence Manuel <rencedm112@gmail.com>"]

[workspace.dependencies]
serde = { version = "^1.0.219", features = ["derive", "rc", "alloc"] }
sys_traits = { version = "^0.1.17", features = ["real"] }
system_traits = { path = "./crates/system_traits" }
async-trait = { version = "^0.1.88" }
serde_json = { version = "^1.0.142" }
trace = { path = "./crates/trace" }
tracing = { version = "^0.1.41" }
tracing-core = { version = "^0.1.34" }
tracing-subscriber = { version = "^0.3.19" }
tracing-serde = { version = "^0.2.0" }
futures = { version = "^0.3.31" }
thiserror = "^2.0.12"
eyre = "^0.6.12"
time = { version = "^0.3.41", features = [] }
derive_more = { version = "^2.0.1", features = ["full"] }
derive-new = { version = "^0.7.0" }
strum = { version = "^0.27.2", features = ["derive"] }
merge = { version = "0.2.0" }
tokio = { version = "^1.46.1", features = [
    "rt",
    "rt-multi-thread",
    "tracing",
    "sync",
    "fs",
    "net",
    "socket2",
    "time",
    "macros",
    "process",
    "io-util",
] }
tokio-util = { version = "^0.7.15", features = ["compat"] }
itertools = { version = "^0.14.0" }
rayon = { version = "^1.10.0" }
reqwest = { version = "^0.12.22", features = [
    "charset",
    "blocking",
    "rustls-tls",
    "http2",
], default-features = false }
# deno_core = { version = "^0.351.0" }
# deno_core = { version = "^0.352.0" }
http = { version = "^1.3.1" }
http-body = { version = "^1.0.1" }
http-body-util = { version = "^0.1.3" }
percent-encoding = { version = "^2.3.1" }
clap = { version = "^4.5.41", features = ["derive", "env"] }
clap_complete = { version = "^4.5.55" }
globset = { version = "^0.4" }
shadow-rs = { version = "^1.2.0", default-features = false }
convert_case = { version = "^0.8.0" }
schemars = { version = "^1.0.4", features = ["indexmap2"] }
walkdir = { version = "^2.5.0" }
serde_yml = { version = "^0.0.12" }
ignore = { version = "^0.4.23" }
regex = { version = "^1.11.1" }
lazy-regex = { version = "^3.4.1" }
env = { path = "./crates/env" }
env_loader = { path = "./crates/env_loader" }
petgraph = { version = "^0.8.2", features = ["serde-1", "rayon"] }
omni_core = { path = "./crates/omni_core" }
config_utils = { path = "./crates/config_utils" }
js_runtime = { path = "./crates/js_runtime" }
toml = { version = "^0.9.2" }
uuid = { version = "^1.17.0", features = ["v4", "v7", "serde"] }
url = { version = "^2.5.4", features = ["serde"] }
parking_lot = { version = "^0.12.4" }
bincode = { version = "^2.0.1", features = ["serde"] }
notify = { version = "^8.1.0" }
dir_walker = { path = "./crates/dir_walker" }
deno_task_shell = { version = "^0.26.0" }
which = { version = "^8.0.0" }
tera = { version = "1.20.0" }
omni_types = { path = "./crates/omni_types" }
rmp-serde = { version = "^1.3.0" }
rmpv = { version = "^1.3.0", features = ["with-serde"] }
defer = { version = "^0.2.1" }
mockall = { version = "^0.13.1" }
ntest = { version = "^0.9.3" }
bytes = { version = "^1.10.1" }
byteorder = { version = "^1.5.0" }
rust-embed = { version = "8.7.2" }
garde = { version = "^0.22.0", features = ["full"] }
os_pipe = { version = "^1.2.2" }
indexmap = { version = "^2.10.0", features = ["serde", "rayon"] }
dashmap = { version = "^6.1.0", features = ["serde", "rayon"] }
ahash = { version = "^0.8.12" }
maps = { path = "./crates/maps" }
sets = { path = "./crates/sets" }
globwalk = { version = "^0.9.1" }
criterion = { version = "^0.7.0", features = ["html_reports"] }
dhat = { version = "^0.3.3" }
enum-map = { version = "^2.7.3" }
portable-pty = { version = "^0.9.0" }
terminal_size = { version = "^0.4.2" }
rmcp = { version = "^0.5.0", features = ["server", "macros"] }
rs_merkle = { version = "^1.5.0" }
omni_cache = { path = "./crates/omni_cache" }
omni_hasher = { path = "./crates/omni_hasher" }
derive_builder = { version = "^0.20.2" }
blake3 = { version = "^1.8.2" }
faster-hex = { version = "^0.10.0" }
tempfile = { version = "^3.20.0" }
bs58 = { version = "^0.5.1" }
yoke = { version = "^0.8.0" }

[profile.release]
incremental = true
opt-level = 3       # optimize for speed but increase binary size
codegen-units = 1   # less parallel compilation but more optimization can be done
lto = true          # can perform faster but slower compilation
strip = "debuginfo" # strip debug info from binary to reduce binary size
#debug = false
debug = "line-tables-only"
debug-assertions = false
overflow-checks = false
split-debuginfo = "packed"

# Build release with debug symbols: cargo build --profile=release-with-debug
[profile.release-with-debug]
inherits = "release"
debug = true

[profile.bench-with-debug]
inherits = "bench"
debug = true

# Faster to compile than `release` but with similar performance.
[profile.release-lite]
inherits = "release"
codegen-units = 128
lto = "thin"
