[workspace]
resolver = "3"
members = ["cli/*", "crates/*", "services/*"]
# default-members = ["cli/omni"]

[workspace.package]
homepage = "https://github.com/omni-oss/omni"
license = "MIT"
repository = "https://github.com/omni-oss/omni"
keywords = []
readme = "README.md"
documentation = "https://docs.rs/omni"
description = "A build system for the modern age"
categories = []
rust-version = "1.90.0"
edition = "2024"
version = "0.0.0-semantically-released"
authors = ["Clarence Manuel <rencedm112@gmail.com>"]

[workspace.dependencies]
serde = { version = "^1.0.228", features = ["derive", "rc", "alloc"] }
sys_traits = { version = "^0.1.18", features = ["real"] }
system_traits = { path = "./crates/system_traits" }
async-trait = { version = "^0.1.89" }
serde_json = { version = "^1.0.145" }
trace = { path = "./crates/trace" }
tracing = { version = "^0.1.41" }
tracing-core = { version = "^0.1.34" }
tracing-subscriber = { version = "=0.3.19", features = ["json"] } # Pin to 0.3.19 to avoid https://github.com/tokio-rs/tracing/issues/3369
tracing-serde = { version = "^0.2.0" }
futures = { version = "^0.3.31" }
thiserror = "^2.0.17"
eyre = "^0.6.12"
time = { version = "^0.3.44", features = ["serde", "serde-human-readable"] }
derive_more = { version = "^2.0.1", features = ["full"] }
derive-new = { version = "^0.7.0" }
strum = { version = "^0.27.2", features = ["derive"] }
merge = { version = "0.2.0" }
tokio = { version = "^1.48.0", features = [
    "rt",
    "rt-multi-thread",
    "tracing",
    "sync",
    "fs",
    "net",
    "socket2",
    "time",
    "macros",
    "process",
    "io-std",
    "io-util",
] }
tokio-stream = { version = "^0.1.17", features = ["full"] }
tokio-util = { version = "^0.7.16", features = ["compat"] }
rayon = { version = "^1.11.0" }
reqwest = { version = "^0.12.24", features = [
    "charset",
    "blocking",
    "rustls-tls",
    "http2",
    "json",
], default-features = false }
# deno_core = { version = "^0.351.0" }
# deno_core = { version = "^0.352.0" }
http = { version = "^1.3.1" }
http-body = { version = "^1.0.1" }
http-body-util = { version = "^0.1.3" }
percent-encoding = { version = "^2.3.2" }
clap = { version = "^4.5.49", features = ["derive", "env", "string"] }
clap_complete = { version = "^4.5.59" }
globset = { version = "^0.4" }
shadow-rs = { version = "^1.4.0", default-features = false }
convert_case = { version = "^0.8.0" }
schemars = { version = "^1.0.4", features = ["indexmap2"] }
walkdir = { version = "^2.5.0" }
serde_norway = { version = "^0.9.42" }
ignore = { version = "^0.4.24" }
regex = { version = "^1.12.2" }
lazy-regex = { version = "^3.4.1" }
env = { path = "./crates/env" }
env_loader = { path = "./crates/env_loader" }
petgraph = { version = "^0.8.3", features = ["serde-1", "rayon"] }
omni_core = { path = "./crates/omni_core" }
config_utils = { path = "./crates/config_utils" }
js_runtime = { path = "./crates/js_runtime" }
toml = { version = "^0.9.8" }
uuid = { version = "^1.18.1", features = ["v4", "v7", "serde"] }
url = { version = "^2.5.7", features = ["serde"] }
parking_lot = { version = "^0.12.5" }
bincode = { version = "^2.0.1", features = ["serde"] }
notify = { version = "^8.2.0" }
dir_walker = { path = "./crates/dir_walker" }
which = { version = "^8.0.0" }
tera = { version = "1.20.0" }
omni_types = { path = "./crates/omni_types" }
rmp-serde = { version = "^1.3.0" }
rmpv = { version = "^1.3.0", features = ["with-serde"] }
defer = { version = "^0.2.1" }
mockall = { version = "^0.13.1" }
ntest = { version = "^0.9.3" }
bytes = { version = "^1.10.1" }
byteorder = { version = "^1.5.0" }
rust-embed = { version = "8.7.2", features = ["compression", "include-exclude", "deterministic-timestamps"] }
garde = { version = "^0.22.0", features = ["full"] }
os_pipe = { version = "^1.2.3" }
indexmap = { version = "^2.12.0", features = ["serde", "rayon"] }
dashmap = { version = "^6.1.0", features = ["serde", "rayon"] }
ahash = { version = "^0.8.12" }
maps = { path = "./crates/maps" }
sets = { path = "./crates/sets" }
criterion = { version = "^0.7.0", features = ["html_reports", "async_tokio"] }
dhat = { version = "^0.3.3" }
enum-map = { version = "^2.7.3" }
portable-pty = { version = "^0.9.0" }
terminal_size = { version = "^0.4.3" }
rmcp = { version = "^0.8.1", features = ["server", "macros"] }
rs_merkle = { version = "^1.5.0" }
omni_cache = { path = "./crates/omni_cache" }
omni_hasher = { path = "./crates/omni_hasher" }
derive_builder = { version = "^0.20.2" }
blake3 = { version = "^1.8.2" }
faster-hex = { version = "^0.10.0" }
tempfile = { version = "^3.23.0" }
bs58 = { version = "^0.5.1" }
yoke = { version = "^0.8.0", features = ["derive"] }
owo-colors = { version = "^4.2.3" }
tiny-gradient = { version = "^0.1.0" }
omni_expressions = { path = "./crates/omni_expressions" }
omni_cli_core = { path = "./crates/omni_cli_core" }
cel = { version = "^0.11.5", features = ["json", "regex"] }
omni_test_utils = { path = "./crates/omni_test_utils" }
crossbeam-channel = { version = "^0.5.15" }
shlex = { version = "^1.3.0" }
path-clean = { version = "^1.0.1" }
num_cpus = { version = "^1.17.0" }
omni_generator = { path = "./crates/omni_generator" }
omni_collector = { path = "./crates/omni_collector" }
omni_utils = { path = "./crates/omni_utils" }
omni_configurations = { path = "./crates/omni_configurations" }
omni_context = { path = "./crates/omni_context" }
omni_task_executor = { path = "./crates/omni_task_executor" }
tracing-futures = { version = "^0.2.5", features = ["tokio"] }
pathdiff = { version = "^0.2.3" }
path-slash = { version = "^0.2.1" }
atty = { version = "^0.2.14" }
omni_process = { path = "./crates/omni_process" }
nix = { version = "^0.30.1" }
base64 = { version = "^0.22.1" }
clap_declspec = { path = "./crates/clap_declspec" }
getset = { version = "^0.1.6" }
either = { version = "^1.15.0" }
ratatui = { version = "^0.29.0" }
crossterm = { version = "^0.29.0" }
omni_term_ui = { path = "./crates/omni_term_ui" }
clap_utils = { path = "./crates/clap_utils" }
vte = { version = "^0.15.0" }
unicode-width = "=0.2.0" # hard requirement for ratatui
enumflags2 = { version = "^0.7.12" }
omni_tracing_subscriber = { path = "./crates/omni_tracing_subscriber" }
bytesize = { version = "^2.1.0", features = ["serde"] }
humantime = {version = "^2.3.0"}
humantime-serde = {version = "^1.1.1"}
itertools = { version = "^0.14.0" }
omni_execution_plan = { path = "./crates/omni_execution_plan" }
omni_task_context = { path = "./crates/omni_task_context" }
omni_remote_cache_service = { path = "./services/omni_remote_cache_service" }
omni_remote_cache_storage = { path = "./crates/omni_remote_cache_storage" }
omni_remote_cache_client = { path = "./crates/omni_remote_cache_client" }
omni_file_data_serde = { path = "./crates/omni_file_data_serde" }
omni_setup = { path = "./crates/omni_setup" }
omni_generator_configurations = { path = "./crates/omni_generator_configurations" }
omni_scm = { path = "./crates/omni_scm" }
axum = { version = "^0.8.6", features = ["macros", "http2", "multipart"] }
tower = { version = "^0.5.2" }
tower-http = { version = "^0.6.6", features = ["trace", "catch-panic"] }
axum-valid = { version = "^0.24.0", default-features = false, features = ["full_garde"] }
axum-extra = { version = "^0.10.3", features = [
    "async-stream",
    "typed-header",
    "typed-routing",
    "form",
    "file-stream",
    "error-response"
] }
axum-test = { version = "^18.1.0", features = ["all"] }
validator = { version = "^0.20.0" }
aws-config = { version = "^1.8.8" }
aws-sdk-s3 = { version = "^1.108.0" }
aws-credential-types = { version = "^1.2.8" }
aws-types = { version = "^1.3.9" }
lru = { version = "^0.16.2" }
utoipa = { version = "^5.4.0", features = [
    "indexmap",
    "url",
    "time",
    "debug",
    "uuid",
    "ulid",
    "openapi_extensions",
    "repr",
    "non_strict_integers"
] }
utoipa-scalar = { version = "^0.3.0", features = ["axum"] }
omni_path_utils = { path = "./crates/omni_path_utils" }
async-stream = { version = "^0.3.6" }
flate2 = { version = "^1.1.4", features = ["zlib-rs"], default-features = false }
tar = { version = "^0.4.44" }
keyring = { version = "^3.6.3", features = ["apple-native", "linux-native", "windows-native"] }
machine-uid = { version = "^0.5.3" }
rand = { version = "^0.9.2" }
ring = { version = "^0.17.14" }
git2 = { version = "^0.20.2" }
# nom = { version = "^8.0.0" }

[profile.release]
incremental = true
opt-level = 3       # optimize for speed but increase binary size
codegen-units = 1   # less parallel compilation but more optimization can be done
lto = true          # can perform faster but slower compilation
strip = "debuginfo" # strip debug info from binary to reduce binary size
#debug = false
debug = "line-tables-only"
debug-assertions = false
overflow-checks = false
split-debuginfo = "packed"

# Build release with debug symbols: cargo build --profile=release-with-debug
[profile.release-with-debug]
inherits = "release"
debug = true

[profile.bench-with-debug]
inherits = "bench"
debug = true

# Faster to compile than `release` but with similar performance.
[profile.release-lite]
inherits = "release"
codegen-units = 128
lto = "thin"
